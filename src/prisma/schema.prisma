// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid()) @db.Uuid
  name     String    @db.VarChar(100)
  email    String    @unique @db.VarChar(100)
  password String
  posts    Post[]
  comments Comment[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Post {
  id       String    @id @default(uuid()) @db.Uuid
  authorId String    @db.Uuid
  title    String    @db.VarChar(255)
  content  String
  comments Comment[]
  author   User      @relation(fields: [authorId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@index([authorId])
  @@index([createdAt])
}

model Comment {
  id      String @id @default(uuid()) @db.Uuid
  postId  String @db.Uuid
  userId  String @db.Uuid
  content String @db.VarChar(255)
  user    User   @relation(fields: [userId], references: [id])
  post    Post   @relation(fields: [postId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@index([postId])
  @@index([createdAt])
}
